---
num_models: 4
save_dir: example_results
model_info: # names must match the nodes in the graph.edge_list file
  - 
      name: 0 # must match edge_list file
      desc_name: # use this for descriptive name
      train_input: DATA_TEMP/data1_in.txt # headers needed
      train_output: DATA_TEMP/data1_out.txt # headers needed
      output_dir: resultsM1 # relative filename
      test_output:
        - DATA_TEMP/data1_in.txt 
        - DATA_TEMP/data1_test.txt 
  - 
      name: 1
      train_input: DATA_TEMP/data2_in.txt
      train_output: DATA_TEMP/data2_out.txt
      output_dir: resultsM2 
      test_output:
        - DATA_TEMP/data2_in.txt
        - DATA_TEMP/data2_test.txt #optional
  - 
      name: 2
      train_input: DATA_TEMP/data3_in.txt
      train_output: DATA_TEMP/data3_out.txt
      output_dir: resultsM3
      test_output:
        - DATA_TEMP/data3_in.txt
        - DATA_TEMP/data3_test.txt #optional        
  - 
      name: 3
      train_input: DATA_TEMP/data4_in.txt
      train_output: DATA_TEMP/data4_out.txt
      output_dir: resultsM4
      test_output:
        - DATA_TEMP/data4_in.txt
        - DATA_TEMP/data4_test.txt #optional        
      
inference_type: regression # regression 
algorithm:
  noise_var: 1e-5 # just leave it here, doesnt do much yet
  num_optimization_steps: 1000
graph:
  structure: GRAPH_FILE_TEMP
  node_model: linear
  edge_model: linear
  connection_type: scale-shift # composition (eventually)
...

  
